package com.TestExa.boot.vo;

import java.util.ArrayList;
import java.util.List;

public class ExoptionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public ExoptionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andExoidIsNull() {
            addCriterion("exoid is null");
            return (Criteria) this;
        }

        public Criteria andExoidIsNotNull() {
            addCriterion("exoid is not null");
            return (Criteria) this;
        }

        public Criteria andExoidEqualTo(Integer value) {
            addCriterion("exoid =", value, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidNotEqualTo(Integer value) {
            addCriterion("exoid <>", value, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidGreaterThan(Integer value) {
            addCriterion("exoid >", value, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidGreaterThanOrEqualTo(Integer value) {
            addCriterion("exoid >=", value, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidLessThan(Integer value) {
            addCriterion("exoid <", value, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidLessThanOrEqualTo(Integer value) {
            addCriterion("exoid <=", value, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidIn(List<Integer> values) {
            addCriterion("exoid in", values, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidNotIn(List<Integer> values) {
            addCriterion("exoid not in", values, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidBetween(Integer value1, Integer value2) {
            addCriterion("exoid between", value1, value2, "exoid");
            return (Criteria) this;
        }

        public Criteria andExoidNotBetween(Integer value1, Integer value2) {
            addCriterion("exoid not between", value1, value2, "exoid");
            return (Criteria) this;
        }

        public Criteria andExopIsNull() {
            addCriterion("exop is null");
            return (Criteria) this;
        }

        public Criteria andExopIsNotNull() {
            addCriterion("exop is not null");
            return (Criteria) this;
        }

        public Criteria andExopEqualTo(Integer value) {
            addCriterion("exop =", value, "exop");
            return (Criteria) this;
        }

        public Criteria andExopNotEqualTo(Integer value) {
            addCriterion("exop <>", value, "exop");
            return (Criteria) this;
        }

        public Criteria andExopGreaterThan(Integer value) {
            addCriterion("exop >", value, "exop");
            return (Criteria) this;
        }

        public Criteria andExopGreaterThanOrEqualTo(Integer value) {
            addCriterion("exop >=", value, "exop");
            return (Criteria) this;
        }

        public Criteria andExopLessThan(Integer value) {
            addCriterion("exop <", value, "exop");
            return (Criteria) this;
        }

        public Criteria andExopLessThanOrEqualTo(Integer value) {
            addCriterion("exop <=", value, "exop");
            return (Criteria) this;
        }

        public Criteria andExopIn(List<Integer> values) {
            addCriterion("exop in", values, "exop");
            return (Criteria) this;
        }

        public Criteria andExopNotIn(List<Integer> values) {
            addCriterion("exop not in", values, "exop");
            return (Criteria) this;
        }

        public Criteria andExopBetween(Integer value1, Integer value2) {
            addCriterion("exop between", value1, value2, "exop");
            return (Criteria) this;
        }

        public Criteria andExopNotBetween(Integer value1, Integer value2) {
            addCriterion("exop not between", value1, value2, "exop");
            return (Criteria) this;
        }

        public Criteria andExoinfoIsNull() {
            addCriterion("exoinfo is null");
            return (Criteria) this;
        }

        public Criteria andExoinfoIsNotNull() {
            addCriterion("exoinfo is not null");
            return (Criteria) this;
        }

        public Criteria andExoinfoEqualTo(String value) {
            addCriterion("exoinfo =", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoNotEqualTo(String value) {
            addCriterion("exoinfo <>", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoGreaterThan(String value) {
            addCriterion("exoinfo >", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoGreaterThanOrEqualTo(String value) {
            addCriterion("exoinfo >=", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoLessThan(String value) {
            addCriterion("exoinfo <", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoLessThanOrEqualTo(String value) {
            addCriterion("exoinfo <=", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoLike(String value) {
            addCriterion("exoinfo like", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoNotLike(String value) {
            addCriterion("exoinfo not like", value, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoIn(List<String> values) {
            addCriterion("exoinfo in", values, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoNotIn(List<String> values) {
            addCriterion("exoinfo not in", values, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoBetween(String value1, String value2) {
            addCriterion("exoinfo between", value1, value2, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoinfoNotBetween(String value1, String value2) {
            addCriterion("exoinfo not between", value1, value2, "exoinfo");
            return (Criteria) this;
        }

        public Criteria andExoindexIsNull() {
            addCriterion("exoindex is null");
            return (Criteria) this;
        }

        public Criteria andExoindexIsNotNull() {
            addCriterion("exoindex is not null");
            return (Criteria) this;
        }

        public Criteria andExoindexEqualTo(Integer value) {
            addCriterion("exoindex =", value, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexNotEqualTo(Integer value) {
            addCriterion("exoindex <>", value, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexGreaterThan(Integer value) {
            addCriterion("exoindex >", value, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexGreaterThanOrEqualTo(Integer value) {
            addCriterion("exoindex >=", value, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexLessThan(Integer value) {
            addCriterion("exoindex <", value, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexLessThanOrEqualTo(Integer value) {
            addCriterion("exoindex <=", value, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexIn(List<Integer> values) {
            addCriterion("exoindex in", values, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexNotIn(List<Integer> values) {
            addCriterion("exoindex not in", values, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexBetween(Integer value1, Integer value2) {
            addCriterion("exoindex between", value1, value2, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExoindexNotBetween(Integer value1, Integer value2) {
            addCriterion("exoindex not between", value1, value2, "exoindex");
            return (Criteria) this;
        }

        public Criteria andExqidIsNull() {
            addCriterion("exqid is null");
            return (Criteria) this;
        }

        public Criteria andExqidIsNotNull() {
            addCriterion("exqid is not null");
            return (Criteria) this;
        }

        public Criteria andExqidEqualTo(Integer value) {
            addCriterion("exqid =", value, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidNotEqualTo(Integer value) {
            addCriterion("exqid <>", value, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidGreaterThan(Integer value) {
            addCriterion("exqid >", value, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidGreaterThanOrEqualTo(Integer value) {
            addCriterion("exqid >=", value, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidLessThan(Integer value) {
            addCriterion("exqid <", value, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidLessThanOrEqualTo(Integer value) {
            addCriterion("exqid <=", value, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidIn(List<Integer> values) {
            addCriterion("exqid in", values, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidNotIn(List<Integer> values) {
            addCriterion("exqid not in", values, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidBetween(Integer value1, Integer value2) {
            addCriterion("exqid between", value1, value2, "exqid");
            return (Criteria) this;
        }

        public Criteria andExqidNotBetween(Integer value1, Integer value2) {
            addCriterion("exqid not between", value1, value2, "exqid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exoption
     *
     * @mbg.generated do_not_delete_during_merge Sat Oct 06 10:45:40 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exoption
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}