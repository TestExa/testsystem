package com.TestExa.boot.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ExtermExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public ExtermExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andExteidIsNull() {
            addCriterion("exteid is null");
            return (Criteria) this;
        }

        public Criteria andExteidIsNotNull() {
            addCriterion("exteid is not null");
            return (Criteria) this;
        }

        public Criteria andExteidEqualTo(Integer value) {
            addCriterion("exteid =", value, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidNotEqualTo(Integer value) {
            addCriterion("exteid <>", value, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidGreaterThan(Integer value) {
            addCriterion("exteid >", value, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidGreaterThanOrEqualTo(Integer value) {
            addCriterion("exteid >=", value, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidLessThan(Integer value) {
            addCriterion("exteid <", value, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidLessThanOrEqualTo(Integer value) {
            addCriterion("exteid <=", value, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidIn(List<Integer> values) {
            addCriterion("exteid in", values, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidNotIn(List<Integer> values) {
            addCriterion("exteid not in", values, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidBetween(Integer value1, Integer value2) {
            addCriterion("exteid between", value1, value2, "exteid");
            return (Criteria) this;
        }

        public Criteria andExteidNotBetween(Integer value1, Integer value2) {
            addCriterion("exteid not between", value1, value2, "exteid");
            return (Criteria) this;
        }

        public Criteria andExtbeginIsNull() {
            addCriterion("extbegin is null");
            return (Criteria) this;
        }

        public Criteria andExtbeginIsNotNull() {
            addCriterion("extbegin is not null");
            return (Criteria) this;
        }

        public Criteria andExtbeginEqualTo(Date value) {
            addCriterionForJDBCDate("extbegin =", value, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginNotEqualTo(Date value) {
            addCriterionForJDBCDate("extbegin <>", value, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginGreaterThan(Date value) {
            addCriterionForJDBCDate("extbegin >", value, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("extbegin >=", value, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginLessThan(Date value) {
            addCriterionForJDBCDate("extbegin <", value, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("extbegin <=", value, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginIn(List<Date> values) {
            addCriterionForJDBCDate("extbegin in", values, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginNotIn(List<Date> values) {
            addCriterionForJDBCDate("extbegin not in", values, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("extbegin between", value1, value2, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtbeginNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("extbegin not between", value1, value2, "extbegin");
            return (Criteria) this;
        }

        public Criteria andExtendIsNull() {
            addCriterion("extend is null");
            return (Criteria) this;
        }

        public Criteria andExtendIsNotNull() {
            addCriterion("extend is not null");
            return (Criteria) this;
        }

        public Criteria andExtendEqualTo(Date value) {
            addCriterionForJDBCDate("extend =", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendNotEqualTo(Date value) {
            addCriterionForJDBCDate("extend <>", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendGreaterThan(Date value) {
            addCriterionForJDBCDate("extend >", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("extend >=", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendLessThan(Date value) {
            addCriterionForJDBCDate("extend <", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("extend <=", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendIn(List<Date> values) {
            addCriterionForJDBCDate("extend in", values, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendNotIn(List<Date> values) {
            addCriterionForJDBCDate("extend not in", values, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("extend between", value1, value2, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("extend not between", value1, value2, "extend");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exterm
     *
     * @mbg.generated do_not_delete_during_merge Sat Oct 06 10:45:40 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exterm
     *
     * @mbg.generated Sat Oct 06 10:45:40 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}